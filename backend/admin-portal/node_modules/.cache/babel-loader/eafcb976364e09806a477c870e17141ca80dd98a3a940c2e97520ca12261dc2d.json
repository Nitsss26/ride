{"ast":null,"code":"import axios from \"axios\";\n\n// Base URLs for different services\nconst API_BASE_URL = \"http://82.29.164.244/\";\nconst USER_SERVICE_URL = \"http://82.29.164.244:3006\";\nconst DRIVER_SERVICE_URL = \"http://82.29.164.244:3001\";\nconst RIDE_SERVICE_URL = \"http://82.29.164.244:3000\";\nconst SUPPORT_SERVICE_URL = \"http://82.29.164.244:3007\";\nconst ADMIN_SERVICE_URL = \"http://82.29.164.244:3009\";\nconst ANALYTICS_SERVICE_URL = `${API_BASE_URL}/analytics-service`;\n\n// Create axios instances for different services\nconst createAxiosInstance = baseURL => {\n  const instance = axios.create({\n    baseURL,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    timeout: 10000\n  });\n\n  // Request interceptor for adding auth token\n  instance.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  // Response interceptor for handling errors\n  instance.interceptors.response.use(response => response, error => {\n    // Handle 401 Unauthorized errors (token expired)\n    if (error.response && error.response.status === 401) {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n  });\n  return instance;\n};\nconst userService = createAxiosInstance(USER_SERVICE_URL);\nconst driverService = createAxiosInstance(DRIVER_SERVICE_URL);\nconst rideService = createAxiosInstance(RIDE_SERVICE_URL);\nconst supportService = createAxiosInstance(SUPPORT_SERVICE_URL);\nconst adminService = createAxiosInstance(ADMIN_SERVICE_URL);\nconst analyticsService = createAxiosInstance(ANALYTICS_SERVICE_URL);\n\n// Auth APIs\nexport const login = async credentials => {\n  try {\n    const response = await adminService.post(\"/auth/login\", credentials);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const logout = async () => {\n  try {\n    const response = await adminService.post(\"/auth/logout\");\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// User Management APIs\nexport const fetchUsers = async (params = {}) => {\n  try {\n    const response = await userService.get(\"/users\", {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchUserDetails = async userId => {\n  try {\n    const response = await userService.get(`/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateUserStatus = async (userId, status) => {\n  try {\n    const response = await userService.put(`/users/${userId}/status`, {\n      status\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Driver Management APIs\nexport const fetchDrivers = async (params = {}) => {\n  try {\n    var _response$data$pagina, _response$data$pagina2;\n    const response = await driverService.get(\"/drivers\", {\n      params\n    });\n    return {\n      data: response.data.drivers || response.data,\n      totalPages: ((_response$data$pagina = response.data.pagination) === null || _response$data$pagina === void 0 ? void 0 : _response$data$pagina.totalPages) || 1,\n      totalCount: ((_response$data$pagina2 = response.data.pagination) === null || _response$data$pagina2 === void 0 ? void 0 : _response$data$pagina2.total) || response.data.length\n    };\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchDriverDetails = async driverId => {\n  try {\n    const response = await driverService.get(`/drivers/${driverId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateDriverStatus = async (driverId, status) => {\n  try {\n    const response = await driverService.put(`/drivers/${driverId}/status`, {\n      status\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchDriverDocuments = async driverId => {\n  try {\n    const response = await driverService.get(`/drivers/${driverId}/documents`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchPendingDocuments = async () => {\n  try {\n    const response = await driverService.get(\"/documents/pending\");\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const approveDocument = async (documentId, notes) => {\n  try {\n    const response = await driverService.put(`/documents/${documentId}/approve`, {\n      notes\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const rejectDocument = async (documentId, notes) => {\n  try {\n    const response = await driverService.put(`/documents/${documentId}/reject`, {\n      notes\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Ride Management APIs\nexport const fetchRides = async (params = {}) => {\n  try {\n    var _response$data$pagina3, _response$data$pagina4;\n    const response = await rideService.get(\"/rides\", {\n      params\n    });\n    return {\n      data: response.data.rides || response.data,\n      totalPages: ((_response$data$pagina3 = response.data.pagination) === null || _response$data$pagina3 === void 0 ? void 0 : _response$data$pagina3.totalPages) || 1,\n      totalCount: ((_response$data$pagina4 = response.data.pagination) === null || _response$data$pagina4 === void 0 ? void 0 : _response$data$pagina4.total) || response.data.length\n    };\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchRideDetails = async rideId => {\n  try {\n    const response = await rideService.get(`/rides/${rideId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateRideStatus = async (rideId, status) => {\n  try {\n    const response = await rideService.put(`/rides/${rideId}/status`, {\n      status\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Support Ticket APIs\nexport const fetchSupportTickets = async (params = {}) => {\n  try {\n    var _response$data$pagina5, _response$data$pagina6;\n    const response = await supportService.get(\"/tickets\", {\n      params\n    });\n    return {\n      data: response.data.tickets || response.data,\n      totalPages: ((_response$data$pagina5 = response.data.pagination) === null || _response$data$pagina5 === void 0 ? void 0 : _response$data$pagina5.totalPages) || 1,\n      totalCount: ((_response$data$pagina6 = response.data.pagination) === null || _response$data$pagina6 === void 0 ? void 0 : _response$data$pagina6.total) || response.data.length\n    };\n  } catch (error) {\n    throw error;\n  }\n};\nexport const fetchTicketDetails = async ticketId => {\n  try {\n    const response = await supportService.get(`/tickets/${ticketId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateTicketStatus = async (ticketId, status) => {\n  try {\n    const response = await supportService.put(`/tickets/${ticketId}/status`, {\n      status\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addTicketReply = async (ticketId, replyData) => {\n  try {\n    const response = await supportService.post(`/tickets/${ticketId}/replies`, replyData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Admin Management APIs\nexport const fetchAdmins = async () => {\n  try {\n    const response = await adminService.get(\"/admins\");\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createAdmin = async adminData => {\n  try {\n    const response = await adminService.post(\"/admins\", adminData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateAdmin = async (adminId, adminData) => {\n  try {\n    const response = await adminService.put(`/admins/${adminId}`, adminData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteAdmin = async adminId => {\n  try {\n    const response = await adminService.delete(`/admins/${adminId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateAdminProfile = async profileData => {\n  try {\n    const response = await adminService.put(\"/profile\", profileData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateAdminPassword = async passwordData => {\n  try {\n    const response = await adminService.put(\"/password\", passwordData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Analytics APIs\nexport const getDashboardOverview = async () => {\n  try {\n    const response = await analyticsService.get(\"/dashboard/overview\");\n    return response.data;\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      totalUsers: 12458,\n      totalDrivers: 3245,\n      totalRides: 28976,\n      activeDrivers: 1876,\n      pendingDriverApprovals: 43,\n      openSupportTickets: 28,\n      revenue: {\n        daily: 8750,\n        weekly: 52480,\n        monthly: 215690,\n        yearly: 2568450\n      },\n      growth: {\n        users: 12.5,\n        drivers: 8.3,\n        rides: 15.2,\n        revenue: 18.7\n      }\n    };\n  }\n};\nexport const getRecentActivity = async () => {\n  try {\n    const response = await analyticsService.get(\"/dashboard/recent-activity\");\n    return response.data;\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      rides: [{\n        _id: \"r1\",\n        riderId: \"u1\",\n        driverId: \"d1\",\n        pickupLocation: {\n          address: \"123 Main St\"\n        },\n        dropoffLocation: {\n          address: \"456 Elm St\"\n        },\n        status: \"completed\",\n        fare: {\n          amount: 25.5,\n          currency: \"USD\"\n        },\n        createdAt: new Date().toISOString()\n      }, {\n        _id: \"r2\",\n        riderId: \"u2\",\n        driverId: \"d2\",\n        pickupLocation: {\n          address: \"789 Oak Ave\"\n        },\n        dropoffLocation: {\n          address: \"101 Pine Rd\"\n        },\n        status: \"in-progress\",\n        fare: {\n          amount: 18.75,\n          currency: \"USD\"\n        },\n        createdAt: new Date().toISOString()\n      }, {\n        _id: \"r3\",\n        riderId: \"u3\",\n        driverId: \"d3\",\n        pickupLocation: {\n          address: \"202 Maple Dr\"\n        },\n        dropoffLocation: {\n          address: \"303 Cedar Ln\"\n        },\n        status: \"cancelled\",\n        fare: {\n          amount: 0,\n          currency: \"USD\"\n        },\n        createdAt: new Date().toISOString()\n      }],\n      users: [{\n        _id: \"u1\",\n        name: \"John Smith\",\n        email: \"john@example.com\",\n        role: \"rider\",\n        createdAt: new Date().toISOString()\n      }, {\n        _id: \"u2\",\n        name: \"Jane Doe\",\n        email: \"jane@example.com\",\n        role: \"rider\",\n        createdAt: new Date().toISOString()\n      }, {\n        _id: \"d1\",\n        name: \"Mike Johnson\",\n        email: \"mike@example.com\",\n        role: \"driver\",\n        createdAt: new Date().toISOString()\n      }],\n      supportTickets: [{\n        _id: \"t1\",\n        userId: \"u1\",\n        issueType: \"payment_dispute\",\n        description: \"I was charged incorrectly for my last ride\",\n        status: \"open\",\n        createdAt: new Date().toISOString()\n      }, {\n        _id: \"t2\",\n        userId: \"d1\",\n        issueType: \"app_bug\",\n        description: \"The app crashes when I try to start a ride\",\n        status: \"in-progress\",\n        createdAt: new Date().toISOString()\n      }, {\n        _id: \"t3\",\n        userId: \"u2\",\n        issueType: \"driver_behavior\",\n        description: \"The driver was rude and took a longer route\",\n        status: \"resolved\",\n        createdAt: new Date().toISOString()\n      }]\n    };\n  }\n};\nexport const getRevenueStats = async (period = \"week\") => {\n  try {\n    const response = await analyticsService.get(`/dashboard/revenue?period=${period}`);\n    return response.data;\n  } catch (error) {\n    // Return dummy data for development\n    const dummyData = [];\n    const today = new Date();\n    if (period === \"week\") {\n      for (let i = 6; i >= 0; i--) {\n        const date = new Date(today);\n        date.setDate(date.getDate() - i);\n        dummyData.push({\n          date: date.toISOString().split(\"T\")[0],\n          amount: Math.floor(Math.random() * 5000) + 3000\n        });\n      }\n    } else if (period === \"month\") {\n      for (let i = 29; i >= 0; i--) {\n        const date = new Date(today);\n        date.setDate(date.getDate() - i);\n        dummyData.push({\n          date: date.toISOString().split(\"T\")[0],\n          amount: Math.floor(Math.random() * 5000) + 3000\n        });\n      }\n    } else if (period === \"year\") {\n      for (let i = 11; i >= 0; i--) {\n        const date = new Date(today);\n        date.setMonth(date.getMonth() - i);\n        dummyData.push({\n          date: `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, \"0\")}`,\n          amount: Math.floor(Math.random() * 50000) + 30000\n        });\n      }\n    }\n    return dummyData;\n  }\n};\nexport const getUserStats = async (params = {}) => {\n  try {\n    const response = await analyticsService.get(\"/users/stats\", {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      userGrowth: [{\n        date: \"2023-01\",\n        count: 1250\n      }, {\n        date: \"2023-02\",\n        count: 1380\n      }, {\n        date: \"2023-03\",\n        count: 1490\n      }, {\n        date: \"2023-04\",\n        count: 1620\n      }, {\n        date: \"2023-05\",\n        count: 1780\n      }, {\n        date: \"2023-06\",\n        count: 1950\n      }],\n      usersByRegion: [{\n        region: \"North America\",\n        count: 5240\n      }, {\n        region: \"Europe\",\n        count: 3180\n      }, {\n        region: \"Asia\",\n        count: 2760\n      }, {\n        region: \"South America\",\n        count: 980\n      }, {\n        region: \"Africa\",\n        count: 540\n      }, {\n        region: \"Australia\",\n        count: 320\n      }],\n      usersByDevice: [{\n        device: \"iOS\",\n        count: 6540\n      }, {\n        device: \"Android\",\n        count: 5420\n      }, {\n        device: \"Web\",\n        count: 980\n      }],\n      activeUsers: {\n        daily: 3250,\n        weekly: 7840,\n        monthly: 10580\n      }\n    };\n  }\n};\nexport const getDriverStats = async (params = {}) => {\n  try {\n    const response = await analyticsService.get(\"/drivers/stats\", {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      driverGrowth: [{\n        date: \"2023-01\",\n        count: 320\n      }, {\n        date: \"2023-02\",\n        count: 380\n      }, {\n        date: \"2023-03\",\n        count: 420\n      }, {\n        date: \"2023-04\",\n        count: 490\n      }, {\n        date: \"2023-05\",\n        count: 540\n      }, {\n        date: \"2023-06\",\n        count: 610\n      }],\n      driversByRegion: [{\n        region: \"North America\",\n        count: 1240\n      }, {\n        region: \"Europe\",\n        count: 980\n      }, {\n        region: \"Asia\",\n        count: 760\n      }, {\n        region: \"South America\",\n        count: 320\n      }, {\n        region: \"Africa\",\n        count: 180\n      }, {\n        region: \"Australia\",\n        count: 120\n      }],\n      driverRatings: [{\n        rating: \"5\",\n        count: 1850\n      }, {\n        rating: \"4\",\n        count: 980\n      }, {\n        rating: \"3\",\n        count: 320\n      }, {\n        rating: \"2\",\n        count: 80\n      }, {\n        rating: \"1\",\n        count: 15\n      }],\n      activeDrivers: {\n        daily: 980,\n        weekly: 1840,\n        monthly: 2580\n      }\n    };\n  }\n};\nexport const getRideStats = async (params = {}) => {\n  try {\n    const response = await analyticsService.get(\"/rides/stats\", {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      rideGrowth: [{\n        date: \"2023-01\",\n        count: 3250\n      }, {\n        date: \"2023-02\",\n        count: 3580\n      }, {\n        date: \"2023-03\",\n        count: 4120\n      }, {\n        date: \"2023-04\",\n        count: 4680\n      }, {\n        date: \"2023-05\",\n        count: 5240\n      }, {\n        date: \"2023-06\",\n        count: 5780\n      }],\n      ridesByRegion: [{\n        region: \"North America\",\n        count: 12540\n      }, {\n        region: \"Europe\",\n        count: 8760\n      }, {\n        region: \"Asia\",\n        count: 6320\n      }, {\n        region: \"South America\",\n        count: 2180\n      }, {\n        region: \"Africa\",\n        count: 980\n      }, {\n        region: \"Australia\",\n        count: 720\n      }],\n      ridesByStatus: [{\n        status: \"completed\",\n        count: 25840\n      }, {\n        status: \"cancelled\",\n        count: 2180\n      }, {\n        status: \"in-progress\",\n        count: 980\n      }],\n      peakHours: [{\n        hour: \"00:00\",\n        count: 320\n      }, {\n        hour: \"01:00\",\n        count: 180\n      }, {\n        hour: \"02:00\",\n        count: 120\n      }, {\n        hour: \"03:00\",\n        count: 80\n      }, {\n        hour: \"04:00\",\n        count: 60\n      }, {\n        hour: \"05:00\",\n        count: 120\n      }, {\n        hour: \"06:00\",\n        count: 280\n      }, {\n        hour: \"07:00\",\n        count: 780\n      }, {\n        hour: \"08:00\",\n        count: 1580\n      }, {\n        hour: \"09:00\",\n        count: 1280\n      }, {\n        hour: \"10:00\",\n        count: 980\n      }, {\n        hour: \"11:00\",\n        count: 1120\n      }, {\n        hour: \"12:00\",\n        count: 1380\n      }, {\n        hour: \"13:00\",\n        count: 1240\n      }, {\n        hour: \"14:00\",\n        count: 980\n      }, {\n        hour: \"15:00\",\n        count: 1080\n      }, {\n        hour: \"16:00\",\n        count: 1580\n      }, {\n        hour: \"17:00\",\n        count: 2180\n      }, {\n        hour: \"18:00\",\n        count: 2480\n      }, {\n        hour: \"19:00\",\n        count: 1980\n      }, {\n        hour: \"20:00\",\n        count: 1580\n      }, {\n        hour: \"21:00\",\n        count: 1280\n      }, {\n        hour: \"22:00\",\n        count: 980\n      }, {\n        hour: \"23:00\",\n        count: 580\n      }]\n    };\n  }\n};\nexport const getRevenueAnalytics = async (params = {}) => {\n  try {\n    const response = await analyticsService.get(\"/revenue/analytics\", {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      revenueGrowth: [{\n        date: \"2023-01\",\n        amount: 125000\n      }, {\n        date: \"2023-02\",\n        amount: 138000\n      }, {\n        date: \"2023-03\",\n        amount: 149000\n      }, {\n        date: \"2023-04\",\n        amount: 162000\n      }, {\n        date: \"2023-05\",\n        amount: 178000\n      }, {\n        date: \"2023-06\",\n        amount: 195000\n      }],\n      revenueByRegion: [{\n        region: \"North America\",\n        amount: 524000\n      }, {\n        region: \"Europe\",\n        amount: 318000\n      }, {\n        region: \"Asia\",\n        amount: 276000\n      }, {\n        region: \"South America\",\n        amount: 98000\n      }, {\n        region: \"Africa\",\n        amount: 54000\n      }, {\n        region: \"Australia\",\n        amount: 32000\n      }],\n      revenueByPaymentMethod: [{\n        method: \"Credit Card\",\n        amount: 654000\n      }, {\n        method: \"Debit Card\",\n        amount: 342000\n      }, {\n        method: \"Digital Wallet\",\n        amount: 198000\n      }, {\n        method: \"Cash\",\n        amount: 108000\n      }],\n      averageFare: {\n        overall: 22.5,\n        byRegion: [{\n          region: \"North America\",\n          amount: 25.8\n        }, {\n          region: \"Europe\",\n          amount: 22.4\n        }, {\n          region: \"Asia\",\n          amount: 18.6\n        }, {\n          region: \"South America\",\n          amount: 15.2\n        }, {\n          region: \"Africa\",\n          amount: 12.8\n        }, {\n          region: \"Australia\",\n          amount: 28.4\n        }]\n      }\n    };\n  }\n};\n\n// Helper function to set auth token\nexport const setAuthToken = token => {\n  if (token) {\n    localStorage.setItem(\"token\", token);\n    userService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    driverService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    rideService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    supportService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    adminService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    analyticsService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    localStorage.removeItem(\"token\");\n    delete userService.defaults.headers.common[\"Authorization\"];\n    delete driverService.defaults.headers.common[\"Authorization\"];\n    delete rideService.defaults.headers.common[\"Authorization\"];\n    delete supportService.defaults.headers.common[\"Authorization\"];\n    delete adminService.defaults.headers.common[\"Authorization\"];\n    delete analyticsService.defaults.headers.common[\"Authorization\"];\n  }\n};\n\n// Export a default object with all APIs\nexport default {\n  setAuthToken,\n  login,\n  logout,\n  fetchUsers,\n  fetchUserDetails,\n  updateUserStatus,\n  fetchDrivers,\n  fetchDriverDetails,\n  updateDriverStatus,\n  fetchDriverDocuments,\n  fetchPendingDocuments,\n  approveDocument,\n  rejectDocument,\n  fetchRides,\n  fetchRideDetails,\n  updateRideStatus,\n  fetchSupportTickets,\n  fetchTicketDetails,\n  updateTicketStatus,\n  addTicketReply,\n  fetchAdmins,\n  createAdmin,\n  updateAdmin,\n  deleteAdmin,\n  updateAdminProfile,\n  updateAdminPassword,\n  getDashboardOverview,\n  getRecentActivity,\n  getRevenueStats,\n  getUserStats,\n  getDriverStats,\n  getRideStats,\n  getRevenueAnalytics\n};","map":{"version":3,"names":["axios","API_BASE_URL","USER_SERVICE_URL","DRIVER_SERVICE_URL","RIDE_SERVICE_URL","SUPPORT_SERVICE_URL","ADMIN_SERVICE_URL","ANALYTICS_SERVICE_URL","createAxiosInstance","baseURL","instance","create","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href","userService","driverService","rideService","supportService","adminService","analyticsService","login","credentials","post","data","logout","fetchUsers","params","get","fetchUserDetails","userId","updateUserStatus","put","fetchDrivers","_response$data$pagina","_response$data$pagina2","drivers","totalPages","pagination","totalCount","total","length","fetchDriverDetails","driverId","updateDriverStatus","fetchDriverDocuments","fetchPendingDocuments","approveDocument","documentId","notes","rejectDocument","fetchRides","_response$data$pagina3","_response$data$pagina4","rides","fetchRideDetails","rideId","updateRideStatus","fetchSupportTickets","_response$data$pagina5","_response$data$pagina6","tickets","fetchTicketDetails","ticketId","updateTicketStatus","addTicketReply","replyData","fetchAdmins","createAdmin","adminData","updateAdmin","adminId","deleteAdmin","delete","updateAdminProfile","profileData","updateAdminPassword","passwordData","getDashboardOverview","totalUsers","totalDrivers","totalRides","activeDrivers","pendingDriverApprovals","openSupportTickets","revenue","daily","weekly","monthly","yearly","growth","users","getRecentActivity","_id","riderId","pickupLocation","address","dropoffLocation","fare","amount","currency","createdAt","Date","toISOString","name","email","role","supportTickets","issueType","description","getRevenueStats","period","dummyData","today","i","date","setDate","getDate","push","split","Math","floor","random","setMonth","getMonth","getFullYear","String","padStart","getUserStats","userGrowth","count","usersByRegion","region","usersByDevice","device","activeUsers","getDriverStats","driverGrowth","driversByRegion","driverRatings","rating","getRideStats","rideGrowth","ridesByRegion","ridesByStatus","peakHours","hour","getRevenueAnalytics","revenueGrowth","revenueByRegion","revenueByPaymentMethod","method","averageFare","overall","byRegion","setAuthToken","setItem","defaults","common"],"sources":["/app/src/services/api.js"],"sourcesContent":["import axios from \"axios\"\n\n// Base URLs for different services\nconst API_BASE_URL = \"http://82.29.164.244/\"\nconst USER_SERVICE_URL = \"http://82.29.164.244:3006\"\nconst DRIVER_SERVICE_URL = \"http://82.29.164.244:3001\"\nconst RIDE_SERVICE_URL = \"http://82.29.164.244:3000\"\nconst SUPPORT_SERVICE_URL = \"http://82.29.164.244:3007\"\nconst ADMIN_SERVICE_URL = \"http://82.29.164.244:3009\"\nconst ANALYTICS_SERVICE_URL = `${API_BASE_URL}/analytics-service`\n\n// Create axios instances for different services\nconst createAxiosInstance = (baseURL) => {\n  const instance = axios.create({\n    baseURL,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    timeout: 10000,\n  })\n\n  // Request interceptor for adding auth token\n  instance.interceptors.request.use(\n    (config) => {\n      const token = localStorage.getItem(\"token\")\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${token}`\n      }\n      return config\n    },\n    (error) => {\n      return Promise.reject(error)\n    },\n  )\n\n  // Response interceptor for handling errors\n  instance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      // Handle 401 Unauthorized errors (token expired)\n      if (error.response && error.response.status === 401) {\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"user\")\n        window.location.href = \"/login\"\n      }\n      return Promise.reject(error)\n    },\n  )\n\n  return instance\n}\n\nconst userService = createAxiosInstance(USER_SERVICE_URL)\nconst driverService = createAxiosInstance(DRIVER_SERVICE_URL)\nconst rideService = createAxiosInstance(RIDE_SERVICE_URL)\nconst supportService = createAxiosInstance(SUPPORT_SERVICE_URL)\nconst adminService = createAxiosInstance(ADMIN_SERVICE_URL)\nconst analyticsService = createAxiosInstance(ANALYTICS_SERVICE_URL)\n\n// Auth APIs\nexport const login = async (credentials) => {\n  try {\n    const response = await adminService.post(\"/auth/login\", credentials)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const logout = async () => {\n  try {\n    const response = await adminService.post(\"/auth/logout\")\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// User Management APIs\nexport const fetchUsers = async (params = {}) => {\n  try {\n    const response = await userService.get(\"/users\", { params })\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const fetchUserDetails = async (userId) => {\n  try {\n    const response = await userService.get(`/users/${userId}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const updateUserStatus = async (userId, status) => {\n  try {\n    const response = await userService.put(`/users/${userId}/status`, { status })\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// Driver Management APIs\nexport const fetchDrivers = async (params = {}) => {\n  try {\n    const response = await driverService.get(\"/drivers\", { params })\n    return {\n      data: response.data.drivers || response.data,\n      totalPages: response.data.pagination?.totalPages || 1,\n      totalCount: response.data.pagination?.total || response.data.length,\n    }\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const fetchDriverDetails = async (driverId) => {\n  try {\n    const response = await driverService.get(`/drivers/${driverId}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const updateDriverStatus = async (driverId, status) => {\n  try {\n    const response = await driverService.put(`/drivers/${driverId}/status`, { status })\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const fetchDriverDocuments = async (driverId) => {\n  try {\n    const response = await driverService.get(`/drivers/${driverId}/documents`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const fetchPendingDocuments = async () => {\n  try {\n    const response = await driverService.get(\"/documents/pending\")\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const approveDocument = async (documentId, notes) => {\n  try {\n    const response = await driverService.put(`/documents/${documentId}/approve`, { notes })\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const rejectDocument = async (documentId, notes) => {\n  try {\n    const response = await driverService.put(`/documents/${documentId}/reject`, { notes })\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// Ride Management APIs\nexport const fetchRides = async (params = {}) => {\n  try {\n    const response = await rideService.get(\"/rides\", { params })\n    return {\n      data: response.data.rides || response.data,\n      totalPages: response.data.pagination?.totalPages || 1,\n      totalCount: response.data.pagination?.total || response.data.length,\n    }\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const fetchRideDetails = async (rideId) => {\n  try {\n    const response = await rideService.get(`/rides/${rideId}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const updateRideStatus = async (rideId, status) => {\n  try {\n    const response = await rideService.put(`/rides/${rideId}/status`, { status })\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// Support Ticket APIs\nexport const fetchSupportTickets = async (params = {}) => {\n  try {\n    const response = await supportService.get(\"/tickets\", { params })\n    return {\n      data: response.data.tickets || response.data,\n      totalPages: response.data.pagination?.totalPages || 1,\n      totalCount: response.data.pagination?.total || response.data.length,\n    }\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const fetchTicketDetails = async (ticketId) => {\n  try {\n    const response = await supportService.get(`/tickets/${ticketId}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const updateTicketStatus = async (ticketId, status) => {\n  try {\n    const response = await supportService.put(`/tickets/${ticketId}/status`, { status })\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const addTicketReply = async (ticketId, replyData) => {\n  try {\n    const response = await supportService.post(`/tickets/${ticketId}/replies`, replyData)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// Admin Management APIs\nexport const fetchAdmins = async () => {\n  try {\n    const response = await adminService.get(\"/admins\")\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const createAdmin = async (adminData) => {\n  try {\n    const response = await adminService.post(\"/admins\", adminData)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const updateAdmin = async (adminId, adminData) => {\n  try {\n    const response = await adminService.put(`/admins/${adminId}`, adminData)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const deleteAdmin = async (adminId) => {\n  try {\n    const response = await adminService.delete(`/admins/${adminId}`)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const updateAdminProfile = async (profileData) => {\n  try {\n    const response = await adminService.put(\"/profile\", profileData)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const updateAdminPassword = async (passwordData) => {\n  try {\n    const response = await adminService.put(\"/password\", passwordData)\n    return response.data\n  } catch (error) {\n    throw error\n  }\n}\n\n// Analytics APIs\nexport const getDashboardOverview = async () => {\n  try {\n    const response = await analyticsService.get(\"/dashboard/overview\")\n    return response.data\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      totalUsers: 12458,\n      totalDrivers: 3245,\n      totalRides: 28976,\n      activeDrivers: 1876,\n      pendingDriverApprovals: 43,\n      openSupportTickets: 28,\n      revenue: {\n        daily: 8750,\n        weekly: 52480,\n        monthly: 215690,\n        yearly: 2568450,\n      },\n      growth: {\n        users: 12.5,\n        drivers: 8.3,\n        rides: 15.2,\n        revenue: 18.7,\n      },\n    }\n  }\n}\n\nexport const getRecentActivity = async () => {\n  try {\n    const response = await analyticsService.get(\"/dashboard/recent-activity\")\n    return response.data\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      rides: [\n        {\n          _id: \"r1\",\n          riderId: \"u1\",\n          driverId: \"d1\",\n          pickupLocation: { address: \"123 Main St\" },\n          dropoffLocation: { address: \"456 Elm St\" },\n          status: \"completed\",\n          fare: { amount: 25.5, currency: \"USD\" },\n          createdAt: new Date().toISOString(),\n        },\n        {\n          _id: \"r2\",\n          riderId: \"u2\",\n          driverId: \"d2\",\n          pickupLocation: { address: \"789 Oak Ave\" },\n          dropoffLocation: { address: \"101 Pine Rd\" },\n          status: \"in-progress\",\n          fare: { amount: 18.75, currency: \"USD\" },\n          createdAt: new Date().toISOString(),\n        },\n        {\n          _id: \"r3\",\n          riderId: \"u3\",\n          driverId: \"d3\",\n          pickupLocation: { address: \"202 Maple Dr\" },\n          dropoffLocation: { address: \"303 Cedar Ln\" },\n          status: \"cancelled\",\n          fare: { amount: 0, currency: \"USD\" },\n          createdAt: new Date().toISOString(),\n        },\n      ],\n      users: [\n        {\n          _id: \"u1\",\n          name: \"John Smith\",\n          email: \"john@example.com\",\n          role: \"rider\",\n          createdAt: new Date().toISOString(),\n        },\n        {\n          _id: \"u2\",\n          name: \"Jane Doe\",\n          email: \"jane@example.com\",\n          role: \"rider\",\n          createdAt: new Date().toISOString(),\n        },\n        {\n          _id: \"d1\",\n          name: \"Mike Johnson\",\n          email: \"mike@example.com\",\n          role: \"driver\",\n          createdAt: new Date().toISOString(),\n        },\n      ],\n      supportTickets: [\n        {\n          _id: \"t1\",\n          userId: \"u1\",\n          issueType: \"payment_dispute\",\n          description: \"I was charged incorrectly for my last ride\",\n          status: \"open\",\n          createdAt: new Date().toISOString(),\n        },\n        {\n          _id: \"t2\",\n          userId: \"d1\",\n          issueType: \"app_bug\",\n          description: \"The app crashes when I try to start a ride\",\n          status: \"in-progress\",\n          createdAt: new Date().toISOString(),\n        },\n        {\n          _id: \"t3\",\n          userId: \"u2\",\n          issueType: \"driver_behavior\",\n          description: \"The driver was rude and took a longer route\",\n          status: \"resolved\",\n          createdAt: new Date().toISOString(),\n        },\n      ],\n    }\n  }\n}\n\nexport const getRevenueStats = async (period = \"week\") => {\n  try {\n    const response = await analyticsService.get(`/dashboard/revenue?period=${period}`)\n    return response.data\n  } catch (error) {\n    // Return dummy data for development\n    const dummyData = []\n    const today = new Date()\n\n    if (period === \"week\") {\n      for (let i = 6; i >= 0; i--) {\n        const date = new Date(today)\n        date.setDate(date.getDate() - i)\n        dummyData.push({\n          date: date.toISOString().split(\"T\")[0],\n          amount: Math.floor(Math.random() * 5000) + 3000,\n        })\n      }\n    } else if (period === \"month\") {\n      for (let i = 29; i >= 0; i--) {\n        const date = new Date(today)\n        date.setDate(date.getDate() - i)\n        dummyData.push({\n          date: date.toISOString().split(\"T\")[0],\n          amount: Math.floor(Math.random() * 5000) + 3000,\n        })\n      }\n    } else if (period === \"year\") {\n      for (let i = 11; i >= 0; i--) {\n        const date = new Date(today)\n        date.setMonth(date.getMonth() - i)\n        dummyData.push({\n          date: `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, \"0\")}`,\n          amount: Math.floor(Math.random() * 50000) + 30000,\n        })\n      }\n    }\n\n    return dummyData\n  }\n}\n\nexport const getUserStats = async (params = {}) => {\n  try {\n    const response = await analyticsService.get(\"/users/stats\", { params })\n    return response.data\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      userGrowth: [\n        { date: \"2023-01\", count: 1250 },\n        { date: \"2023-02\", count: 1380 },\n        { date: \"2023-03\", count: 1490 },\n        { date: \"2023-04\", count: 1620 },\n        { date: \"2023-05\", count: 1780 },\n        { date: \"2023-06\", count: 1950 },\n      ],\n      usersByRegion: [\n        { region: \"North America\", count: 5240 },\n        { region: \"Europe\", count: 3180 },\n        { region: \"Asia\", count: 2760 },\n        { region: \"South America\", count: 980 },\n        { region: \"Africa\", count: 540 },\n        { region: \"Australia\", count: 320 },\n      ],\n      usersByDevice: [\n        { device: \"iOS\", count: 6540 },\n        { device: \"Android\", count: 5420 },\n        { device: \"Web\", count: 980 },\n      ],\n      activeUsers: {\n        daily: 3250,\n        weekly: 7840,\n        monthly: 10580,\n      },\n    }\n  }\n}\n\nexport const getDriverStats = async (params = {}) => {\n  try {\n    const response = await analyticsService.get(\"/drivers/stats\", { params })\n    return response.data\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      driverGrowth: [\n        { date: \"2023-01\", count: 320 },\n        { date: \"2023-02\", count: 380 },\n        { date: \"2023-03\", count: 420 },\n        { date: \"2023-04\", count: 490 },\n        { date: \"2023-05\", count: 540 },\n        { date: \"2023-06\", count: 610 },\n      ],\n      driversByRegion: [\n        { region: \"North America\", count: 1240 },\n        { region: \"Europe\", count: 980 },\n        { region: \"Asia\", count: 760 },\n        { region: \"South America\", count: 320 },\n        { region: \"Africa\", count: 180 },\n        { region: \"Australia\", count: 120 },\n      ],\n      driverRatings: [\n        { rating: \"5\", count: 1850 },\n        { rating: \"4\", count: 980 },\n        { rating: \"3\", count: 320 },\n        { rating: \"2\", count: 80 },\n        { rating: \"1\", count: 15 },\n      ],\n      activeDrivers: {\n        daily: 980,\n        weekly: 1840,\n        monthly: 2580,\n      },\n    }\n  }\n}\n\nexport const getRideStats = async (params = {}) => {\n  try {\n    const response = await analyticsService.get(\"/rides/stats\", { params })\n    return response.data\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      rideGrowth: [\n        { date: \"2023-01\", count: 3250 },\n        { date: \"2023-02\", count: 3580 },\n        { date: \"2023-03\", count: 4120 },\n        { date: \"2023-04\", count: 4680 },\n        { date: \"2023-05\", count: 5240 },\n        { date: \"2023-06\", count: 5780 },\n      ],\n      ridesByRegion: [\n        { region: \"North America\", count: 12540 },\n        { region: \"Europe\", count: 8760 },\n        { region: \"Asia\", count: 6320 },\n        { region: \"South America\", count: 2180 },\n        { region: \"Africa\", count: 980 },\n        { region: \"Australia\", count: 720 },\n      ],\n      ridesByStatus: [\n        { status: \"completed\", count: 25840 },\n        { status: \"cancelled\", count: 2180 },\n        { status: \"in-progress\", count: 980 },\n      ],\n      peakHours: [\n        { hour: \"00:00\", count: 320 },\n        { hour: \"01:00\", count: 180 },\n        { hour: \"02:00\", count: 120 },\n        { hour: \"03:00\", count: 80 },\n        { hour: \"04:00\", count: 60 },\n        { hour: \"05:00\", count: 120 },\n        { hour: \"06:00\", count: 280 },\n        { hour: \"07:00\", count: 780 },\n        { hour: \"08:00\", count: 1580 },\n        { hour: \"09:00\", count: 1280 },\n        { hour: \"10:00\", count: 980 },\n        { hour: \"11:00\", count: 1120 },\n        { hour: \"12:00\", count: 1380 },\n        { hour: \"13:00\", count: 1240 },\n        { hour: \"14:00\", count: 980 },\n        { hour: \"15:00\", count: 1080 },\n        { hour: \"16:00\", count: 1580 },\n        { hour: \"17:00\", count: 2180 },\n        { hour: \"18:00\", count: 2480 },\n        { hour: \"19:00\", count: 1980 },\n        { hour: \"20:00\", count: 1580 },\n        { hour: \"21:00\", count: 1280 },\n        { hour: \"22:00\", count: 980 },\n        { hour: \"23:00\", count: 580 },\n      ],\n    }\n  }\n}\n\nexport const getRevenueAnalytics = async (params = {}) => {\n  try {\n    const response = await analyticsService.get(\"/revenue/analytics\", { params })\n    return response.data\n  } catch (error) {\n    // Return dummy data for development\n    return {\n      revenueGrowth: [\n        { date: \"2023-01\", amount: 125000 },\n        { date: \"2023-02\", amount: 138000 },\n        { date: \"2023-03\", amount: 149000 },\n        { date: \"2023-04\", amount: 162000 },\n        { date: \"2023-05\", amount: 178000 },\n        { date: \"2023-06\", amount: 195000 },\n      ],\n      revenueByRegion: [\n        { region: \"North America\", amount: 524000 },\n        { region: \"Europe\", amount: 318000 },\n        { region: \"Asia\", amount: 276000 },\n        { region: \"South America\", amount: 98000 },\n        { region: \"Africa\", amount: 54000 },\n        { region: \"Australia\", amount: 32000 },\n      ],\n      revenueByPaymentMethod: [\n        { method: \"Credit Card\", amount: 654000 },\n        { method: \"Debit Card\", amount: 342000 },\n        { method: \"Digital Wallet\", amount: 198000 },\n        { method: \"Cash\", amount: 108000 },\n      ],\n      averageFare: {\n        overall: 22.5,\n        byRegion: [\n          { region: \"North America\", amount: 25.8 },\n          { region: \"Europe\", amount: 22.4 },\n          { region: \"Asia\", amount: 18.6 },\n          { region: \"South America\", amount: 15.2 },\n          { region: \"Africa\", amount: 12.8 },\n          { region: \"Australia\", amount: 28.4 },\n        ],\n      },\n    }\n  }\n}\n\n// Helper function to set auth token\nexport const setAuthToken = (token) => {\n  if (token) {\n    localStorage.setItem(\"token\", token)\n    userService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    driverService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    rideService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    supportService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    adminService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    analyticsService.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n  } else {\n    localStorage.removeItem(\"token\")\n    delete userService.defaults.headers.common[\"Authorization\"]\n    delete driverService.defaults.headers.common[\"Authorization\"]\n    delete rideService.defaults.headers.common[\"Authorization\"]\n    delete supportService.defaults.headers.common[\"Authorization\"]\n    delete adminService.defaults.headers.common[\"Authorization\"]\n    delete analyticsService.defaults.headers.common[\"Authorization\"]\n  }\n}\n\n// Export a default object with all APIs\nexport default {\n  setAuthToken,\n  login,\n  logout,\n  fetchUsers,\n  fetchUserDetails,\n  updateUserStatus,\n  fetchDrivers,\n  fetchDriverDetails,\n  updateDriverStatus,\n  fetchDriverDocuments,\n  fetchPendingDocuments,\n  approveDocument,\n  rejectDocument,\n  fetchRides,\n  fetchRideDetails,\n  updateRideStatus,\n  fetchSupportTickets,\n  fetchTicketDetails,\n  updateTicketStatus,\n  addTicketReply,\n  fetchAdmins,\n  createAdmin,\n  updateAdmin,\n  deleteAdmin,\n  updateAdminProfile,\n  updateAdminPassword,\n  getDashboardOverview,\n  getRecentActivity,\n  getRevenueStats,\n  getUserStats,\n  getDriverStats,\n  getRideStats,\n  getRevenueAnalytics,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}