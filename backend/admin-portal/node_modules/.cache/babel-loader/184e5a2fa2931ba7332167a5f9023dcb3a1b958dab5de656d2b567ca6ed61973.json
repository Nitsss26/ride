{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/app/src/components/dashboard/UserGrowthChart.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserGrowthChart = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    const ctx = chartRef.current.getContext(\"2d\");\n\n    // Format data for chart\n    const labels = data.map(item => item.date);\n    const counts = data.map(item => item.count);\n    chartInstance.current = new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels,\n        datasets: [{\n          label: \"User Growth\",\n          data: counts,\n          borderColor: \"#3B82F6\",\n          // blue-500\n          backgroundColor: \"rgba(59, 130, 246, 0.1)\",\n          tension: 0.4,\n          fill: true,\n          pointBackgroundColor: \"#3B82F6\",\n          pointBorderColor: \"#fff\",\n          pointBorderWidth: 2,\n          pointRadius: 4,\n          pointHoverRadius: 6\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            mode: \"index\",\n            intersect: false,\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n            titleColor: \"#fff\",\n            bodyColor: \"#fff\",\n            borderColor: \"rgba(255, 255, 255, 0.2)\",\n            borderWidth: 1,\n            padding: 10,\n            displayColors: false,\n            callbacks: {\n              label: context => `Users: ${context.raw.toLocaleString()}`\n            }\n          }\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false\n            },\n            ticks: {\n              maxRotation: 0,\n              autoSkip: true,\n              maxTicksLimit: 6\n            }\n          },\n          y: {\n            beginAtZero: true,\n            grid: {\n              color: \"rgba(0, 0, 0, 0.05)\"\n            },\n            ticks: {\n              callback: value => value.toLocaleString()\n            }\n          }\n        }\n      }\n    });\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-64\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(UserGrowthChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = UserGrowthChart;\nexport default UserGrowthChart;\nvar _c;\n$RefreshReg$(_c, \"UserGrowthChart\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useRef","Chart","jsxDEV","_jsxDEV","UserGrowthChart","data","chartRef","chartInstance","current","destroy","ctx","getContext","labels","map","item","date","counts","count","type","datasets","label","borderColor","backgroundColor","tension","fill","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","pointHoverRadius","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","mode","intersect","titleColor","bodyColor","borderWidth","padding","displayColors","callbacks","context","raw","toLocaleString","scales","x","grid","ticks","maxRotation","autoSkip","maxTicksLimit","y","beginAtZero","color","callback","value","className","children","ref","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/dashboard/UserGrowthChart.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useRef } from \"react\"\nimport Chart from \"chart.js/auto\"\n\nconst UserGrowthChart = ({ data }) => {\n  const chartRef = useRef(null)\n  const chartInstance = useRef(null)\n\n  useEffect(() => {\n    if (chartInstance.current) {\n      chartInstance.current.destroy()\n    }\n\n    const ctx = chartRef.current.getContext(\"2d\")\n\n    // Format data for chart\n    const labels = data.map((item) => item.date)\n    const counts = data.map((item) => item.count)\n\n    chartInstance.current = new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels,\n        datasets: [\n          {\n            label: \"User Growth\",\n            data: counts,\n            borderColor: \"#3B82F6\", // blue-500\n            backgroundColor: \"rgba(59, 130, 246, 0.1)\",\n            tension: 0.4,\n            fill: true,\n            pointBackgroundColor: \"#3B82F6\",\n            pointBorderColor: \"#fff\",\n            pointBorderWidth: 2,\n            pointRadius: 4,\n            pointHoverRadius: 6,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false,\n          },\n          tooltip: {\n            mode: \"index\",\n            intersect: false,\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n            titleColor: \"#fff\",\n            bodyColor: \"#fff\",\n            borderColor: \"rgba(255, 255, 255, 0.2)\",\n            borderWidth: 1,\n            padding: 10,\n            displayColors: false,\n            callbacks: {\n              label: (context) => `Users: ${context.raw.toLocaleString()}`,\n            },\n          },\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false,\n            },\n            ticks: {\n              maxRotation: 0,\n              autoSkip: true,\n              maxTicksLimit: 6,\n            },\n          },\n          y: {\n            beginAtZero: true,\n            grid: {\n              color: \"rgba(0, 0, 0, 0.05)\",\n            },\n            ticks: {\n              callback: (value) => value.toLocaleString(),\n            },\n          },\n        },\n      },\n    })\n\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy()\n      }\n    }\n  }, [data])\n\n  return (\n    <div className=\"h-64\">\n      <canvas ref={chartRef}></canvas>\n    </div>\n  )\n}\n\nexport default UserGrowthChart\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}