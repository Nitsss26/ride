{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/app/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\n// import api from \"../services/api\"\nimport { login as loginApi } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is authenticated\n  const isAuthenticated = !!token;\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem(\"token\");\n      const storedUser = localStorage.getItem(\"user\");\n      if (storedToken && storedUser) {\n        setToken(storedToken);\n        setUser(JSON.parse(storedUser));\n        api.setAuthToken(storedToken);\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n\n  // Login function\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      // const response = await api.post(\"/auth/login\", { username, password })\n      const response = await loginApi({\n        username,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Save to state\n      setToken(token);\n      setUser(user);\n\n      // Save to localStorage\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n\n      // Set token for API requests\n      api.setAuthToken(token);\n      toast.success(\"Login successful!\");\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Clear state\n    setToken(null);\n    setUser(null);\n\n    // Clear localStorage\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n\n    // Clear API token\n    api.setAuthToken(null);\n    toast.info(\"Logged out successfully\");\n  };\n\n  // Update user profile\n  const updateProfile = updatedUser => {\n    setUser(updatedUser);\n    localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n  };\n  const authContextValue = {\n    user,\n    token,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"rhlDu0KDBB06MtusE5wjFwcCSuw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","toast","login","loginApi","jsxDEV","_jsxDEV","AuthContext","useAuth","AuthProvider","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","isAuthenticated","initAuth","storedToken","storedUser","JSON","parse","api","setAuthToken","username","password","response","data","setItem","stringify","success","error","_error$response","_error$response$data","console","message","logout","removeItem","info","updateProfile","updatedUser","authContextValue","Provider","value","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/context/AuthContext.jsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect } from \"react\"\nimport { toast } from \"react-toastify\"\n// import api from \"../services/api\"\nimport { login as loginApi } from \"../services/api\"\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => useContext(AuthContext)\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null)\n  const [loading, setLoading] = useState(true)\n\n  // Check if user is authenticated\n  const isAuthenticated = !!token\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem(\"token\")\n      const storedUser = localStorage.getItem(\"user\")\n\n      if (storedToken && storedUser) {\n        setToken(storedToken)\n        setUser(JSON.parse(storedUser))\n        api.setAuthToken(storedToken)\n      }\n\n      setLoading(false)\n    }\n\n    initAuth()\n  }, [])\n\n  // Login function\n  const login = async (username, password) => {\n    try {\n      setLoading(true)\n      // const response = await api.post(\"/auth/login\", { username, password })\nconst response = await loginApi({ username, password })\n      const { token, user } = response.data\n\n      // Save to state\n      setToken(token)\n      setUser(user)\n\n      // Save to localStorage\n      localStorage.setItem(\"token\", token)\n      localStorage.setItem(\"user\", JSON.stringify(user))\n\n      // Set token for API requests\n      api.setAuthToken(token)\n\n      toast.success(\"Login successful!\")\n      return true\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      toast.error(error.response?.data?.message || \"Login failed\")\n      return false\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Logout function\n  const logout = () => {\n    // Clear state\n    setToken(null)\n    setUser(null)\n\n    // Clear localStorage\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user\")\n\n    // Clear API token\n    api.setAuthToken(null)\n\n    toast.info(\"Logged out successfully\")\n  }\n\n  // Update user profile\n  const updateProfile = (updatedUser) => {\n    setUser(updatedUser)\n    localStorage.setItem(\"user\", JSON.stringify(updatedUser))\n  }\n\n  const authContextValue = {\n    user,\n    token,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    updateProfile,\n  }\n\n  return <AuthContext.Provider value={authContextValue}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}