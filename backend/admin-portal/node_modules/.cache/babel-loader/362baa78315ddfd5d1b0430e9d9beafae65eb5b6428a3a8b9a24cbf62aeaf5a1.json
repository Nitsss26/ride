{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = import.meta.env.VITE_ADMIN_SERVICE_URL || \"http://localhost:3009\";\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Request interceptor for adding the auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for handling errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle 401 Unauthorized errors (token expired)\n  if (error.response && error.response.status === 401) {\n    // Clear localStorage and redirect to login\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    window.location.href = \"/login\";\n  }\n  return Promise.reject(error);\n});\n\n// Helper to set auth token\nconst setAuthToken = token => {\n  if (token) {\n    api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers.common[\"Authorization\"];\n  }\n};\n\n// API service methods\nexport default {\n  // Auth\n  setAuthToken,\n  login: credentials => api.post(\"/auth/login\", credentials),\n  // Users\n  getUsers: params => api.get(\"/users\", {\n    params\n  }),\n  getUser: userId => api.get(`/users/${userId}`),\n  updateUserStatus: (userId, status) => api.put(`/users/${userId}/status`, {\n    accountStatus: status\n  }),\n  // Drivers\n  getDrivers: params => api.get(\"/drivers\", {\n    params\n  }),\n  getDriver: driverId => api.get(`/drivers/${driverId}`),\n  getDriverDocuments: driverId => api.get(`/drivers/${driverId}/documents`),\n  getPendingDocuments: () => api.get(\"/drivers/documents/pending\"),\n  approveDocument: (documentId, notes) => api.put(`/drivers/documents/${documentId}`, {\n    status: \"approved\",\n    reviewNotes: notes\n  }),\n  rejectDocument: (documentId, notes) => api.put(`/drivers/documents/${documentId}`, {\n    status: \"rejected\",\n    reviewNotes: notes\n  }),\n  // Missing Driver functions (dummy implementations)\n  fetchDrivers: params => Promise.resolve({\n    data: {\n      drivers: []\n    }\n  }),\n  fetchDriverDetails: driverId => Promise.resolve({\n    data: {\n      driver: {}\n    }\n  }),\n  fetchDriverDocuments: driverId => Promise.resolve({\n    data: {\n      documents: []\n    }\n  }),\n  updateDriverStatus: (driverId, status) => Promise.resolve({\n    data: {\n      success: true\n    }\n  }),\n  // Rides\n  getRides: params => api.get(\"/rides\", {\n    params\n  }),\n  getRide: rideId => api.get(`/rides/${rideId}`),\n  // Support Tickets\n  getTickets: params => api.get(\"/support/tickets\", {\n    params\n  }),\n  getTicket: ticketId => api.get(`/support/tickets/${ticketId}`),\n  updateTicket: (ticketId, data) => api.put(`/support/tickets/${ticketId}`, data),\n  // Missing Support Ticket functions (dummy implementations)\n  fetchSupportTickets: params => Promise.resolve({\n    data: {\n      tickets: []\n    }\n  }),\n  fetchTicketDetails: ticketId => Promise.resolve({\n    data: {\n      ticket: {}\n    }\n  }),\n  updateTicketStatus: (ticketId, status) => Promise.resolve({\n    data: {\n      success: true\n    }\n  }),\n  addTicketReply: (ticketId, reply) => Promise.resolve({\n    data: {\n      success: true\n    }\n  }),\n  // Admin Users\n  getAdmins: () => api.get(\"/admins\"),\n  createAdmin: adminData => api.post(\"/admins\", adminData),\n  updateAdmin: (adminId, adminData) => api.put(`/admins/${adminId}`, adminData),\n  // Missing Admin functions (dummy implementations)\n  updateAdminProfile: (adminId, data) => Promise.resolve({\n    data: {\n      success: true\n    }\n  }),\n  updateAdminPassword: (adminId, data) => Promise.resolve({\n    data: {\n      success: true\n    }\n  }),\n  // Dashboard\n  getDashboardOverview: () => api.get(\"/dashboard-overview\"),\n  getRecentActivity: () => api.get(\"/dashboard/recent-activity\"),\n  getRevenueStats: period => api.get(\"/dashboard/revenue\", {\n    params: {\n      period\n    }\n  }),\n  // Generic request methods\n  get: (url, config) => api.get(url, config),\n  post: (url, data, config) => api.post(url, data, config),\n  put: (url, data, config) => api.put(url, data, config),\n  delete: (url, config) => api.delete(url, config)\n};","map":{"version":3,"names":["axios","API_URL","import","meta","env","VITE_ADMIN_SERVICE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","window","location","href","setAuthToken","defaults","common","login","credentials","post","getUsers","params","get","getUser","userId","updateUserStatus","put","accountStatus","getDrivers","getDriver","driverId","getDriverDocuments","getPendingDocuments","approveDocument","documentId","notes","reviewNotes","rejectDocument","fetchDrivers","resolve","data","drivers","fetchDriverDetails","driver","fetchDriverDocuments","documents","updateDriverStatus","success","getRides","getRide","rideId","getTickets","getTicket","ticketId","updateTicket","fetchSupportTickets","tickets","fetchTicketDetails","ticket","updateTicketStatus","addTicketReply","reply","getAdmins","createAdmin","adminData","updateAdmin","adminId","updateAdminProfile","updateAdminPassword","getDashboardOverview","getRecentActivity","getRevenueStats","period","url","delete"],"sources":["/root/src/ride/backend/admin-portal/src/services/api.js"],"sourcesContent":["import axios from \"axios\"\n\nconst API_URL = import.meta.env.VITE_ADMIN_SERVICE_URL || \"http://localhost:3009\"\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n})\n\n// Request interceptor for adding the auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\n// Response interceptor for handling errors\napi.interceptors.response.use(\n  (response) => {\n    return response\n  },\n  (error) => {\n    // Handle 401 Unauthorized errors (token expired)\n    if (error.response && error.response.status === 401) {\n      // Clear localStorage and redirect to login\n      localStorage.removeItem(\"token\")\n      localStorage.removeItem(\"user\")\n      window.location.href = \"/login\"\n    }\n    return Promise.reject(error)\n  },\n)\n\n// Helper to set auth token\nconst setAuthToken = (token) => {\n  if (token) {\n    api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n  } else {\n    delete api.defaults.headers.common[\"Authorization\"]\n  }\n}\n\n// API service methods\nexport default {\n  // Auth\n  setAuthToken,\n  login: (credentials) => api.post(\"/auth/login\", credentials),\n\n  // Users\n  getUsers: (params) => api.get(\"/users\", { params }),\n  getUser: (userId) => api.get(`/users/${userId}`),\n  updateUserStatus: (userId, status) => api.put(`/users/${userId}/status`, { accountStatus: status }),\n\n  // Drivers\n  getDrivers: (params) => api.get(\"/drivers\", { params }),\n  getDriver: (driverId) => api.get(`/drivers/${driverId}`),\n  getDriverDocuments: (driverId) => api.get(`/drivers/${driverId}/documents`),\n  getPendingDocuments: () => api.get(\"/drivers/documents/pending\"),\n  approveDocument: (documentId, notes) =>\n    api.put(`/drivers/documents/${documentId}`, { status: \"approved\", reviewNotes: notes }),\n  rejectDocument: (documentId, notes) =>\n    api.put(`/drivers/documents/${documentId}`, { status: \"rejected\", reviewNotes: notes }),\n  \n  // Missing Driver functions (dummy implementations)\n  fetchDrivers: (params) => Promise.resolve({ data: { drivers: [] } }),\n  fetchDriverDetails: (driverId) => Promise.resolve({ data: { driver: {} } }),\n  fetchDriverDocuments: (driverId) => Promise.resolve({ data: { documents: [] } }),\n  updateDriverStatus: (driverId, status) => Promise.resolve({ data: { success: true } }),\n\n  // Rides\n  getRides: (params) => api.get(\"/rides\", { params }),\n  getRide: (rideId) => api.get(`/rides/${rideId}`),\n\n  // Support Tickets\n  getTickets: (params) => api.get(\"/support/tickets\", { params }),\n  getTicket: (ticketId) => api.get(`/support/tickets/${ticketId}`),\n  updateTicket: (ticketId, data) => api.put(`/support/tickets/${ticketId}`, data),\n  \n  // Missing Support Ticket functions (dummy implementations)\n  fetchSupportTickets: (params) => Promise.resolve({ data: { tickets: [] } }),\n  fetchTicketDetails: (ticketId) => Promise.resolve({ data: { ticket: {} } }),\n  updateTicketStatus: (ticketId, status) => Promise.resolve({ data: { success: true } }),\n  addTicketReply: (ticketId, reply) => Promise.resolve({ data: { success: true } }),\n\n  // Admin Users\n  getAdmins: () => api.get(\"/admins\"),\n  createAdmin: (adminData) => api.post(\"/admins\", adminData),\n  updateAdmin: (adminId, adminData) => api.put(`/admins/${adminId}`, adminData),\n  \n  // Missing Admin functions (dummy implementations)\n  updateAdminProfile: (adminId, data) => Promise.resolve({ data: { success: true } }),\n  updateAdminPassword: (adminId, data) => Promise.resolve({ data: { success: true } }),\n\n  // Dashboard\n  getDashboardOverview: () => api.get(\"/dashboard-overview\"),\n  getRecentActivity: () => api.get(\"/dashboard/recent-activity\"),\n  getRevenueStats: (period) => api.get(\"/dashboard/revenue\", { params: { period } }),\n\n  // Generic request methods\n  get: (url, config) => api.get(url, config),\n  post: (url, data, config) => api.post(url, data, config),\n  put: (url, data, config) => api.put(url, data, config),\n  delete: (url, config) => api.delete(url, config),\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}