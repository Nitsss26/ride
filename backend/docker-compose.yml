version: '3.8'

services:
  # --- Infrastructure ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - rideverse-net

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      # Expose the internal port 9092 and an external port 29092 for local access
      - "29092:29092"
      # - "9092:9092" # Optional: Expose internal if needed, but 29092 is usually sufficient for local dev
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # Listeners configuration:
      # - PLAINTEXT://kafka:9092 for inter-container communication
      # - EXTERNAL://localhost:29092 for host machine access
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # Auto create topics for simplicity in dev (disable in prod)
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - rideverse-net

  redis:
    image: redis:7-alpine
    hostname: redis
    container_name: redis
    ports:
      - "6379:6379"
    # Enable keyspace notifications for Notification Service timer handling
    command: redis-server --notify-keyspace-events Ex
    networks:
      - rideverse-net

  mongo:
    image: mongo:6.0
    hostname: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db # Persist MongoDB data
    networks:
      - rideverse-net

  # --- Application Services ---
  ride-service:
    build: ./ride-service
    container_name: ride-service
    ports:
      - "3000:3000"
    environment:
      # Use service names for internal communication within Docker network
      RIDE_SERVICE_MONGODB_URI: mongodb://mongo:27017/ride_service
      DRIVER_SERVICE_URL: http://driver-service:3001
      NOTIFICATION_SERVICE_URL: http://notification-service:3002
      REDIS_URL: redis://redis:6379
      KAFKA_BROKERS: kafka:9092 # Use internal Kafka listener
      RIDE_SERVICE_PORT: 3000
    depends_on:
      - mongo
      - redis
      - kafka
    networks:
      - rideverse-net
    volumes:
      - ./ride-service:/usr/src/app # Mount local code for development
      - /usr/src/app/node_modules # Avoid overwriting node_modules in container

  driver-service:
    build: ./driver-service
    container_name: driver-service
    ports:
      - "3001:3001"
    environment:
      DRIVER_SERVICE_MONGODB_URI: mongodb://mongo:27017/driver_service
      RIDE_SERVICE_URL: http://ride-service:3000
      NOTIFICATION_SERVICE_URL: http://notification-service:3002
      REDIS_URL: redis://redis:6379
      KAFKA_BROKERS: kafka:9092
      DRIVER_SERVICE_PORT: 3001
      # Optional: Adjust matching params via env vars
      # DRIVER_SEARCH_RADIUS_KM: 5
      # DRIVER_BATCH_SIZE: 3
      # DRIVER_BATCH_TTL_SECONDS: 90
    depends_on:
      - mongo
      - redis
      - kafka
      - ride-service # Depends on ride-service conceptually
    networks:
      - rideverse-net
    volumes:
      - ./driver-service:/usr/src/app
      - /usr/src/app/node_modules

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "3002:3002" # Expose WebSocket port
    environment:
      NOTIFICATION_SERVICE_MONGODB_URI: mongodb://mongo:27017/notification_service # If needed
      RIDE_SERVICE_URL: http://ride-service:3000
      DRIVER_SERVICE_URL: http://driver-service:3001
      REDIS_URL: redis://redis:6379
      KAFKA_BROKERS: kafka:9092
      NOTIFICATION_SERVICE_PORT: 3002
      # Optional: Adjust timeouts
      # DRIVER_OFFER_TIMEOUT_SECONDS: 30
    depends_on:
      - redis
      - kafka
      - ride-service
      - driver-service
    networks:
      - rideverse-net
    volumes:
      - ./notification-service:/usr/src/app
      - /usr/src/app/node_modules

  location-service:
    build: ./location-service
    container_name: location-service
    ports:
      - "3003:3003" # Expose WebSocket port for drivers
    environment:
      LOCATION_SERVICE_MONGODB_URI: mongodb://mongo:27017/location_service # Primary DB
      DRIVER_SERVICE_MONGODB_URI: mongodb://mongo:27017/driver_service    # Secondary DB
      REDIS_URL: redis://redis:6379
      LOCATION_SERVICE_PORT: 3003
      # Optional: Adjust batching params
      # LOCATION_BATCH_INTERVAL_MS: 60000
      # LOCATION_BATCH_SIZE: 50
    depends_on:
      - mongo
      - redis
    networks:
      - rideverse-net
    volumes:
      - ./location-service:/usr/src/app
      - /usr/src/app/node_modules

  payment-service:
    build: ./payment-service
    container_name: payment-service
    ports:
      - "3004:3004"
    environment:
      PAYMENT_SERVICE_MONGODB_URI: mongodb://mongo:27017/payment_service
      KAFKA_BROKERS: kafka:9092
      PAYMENT_SERVICE_PORT: 3004
      STRIPE_SECRET_KEY: sk_test_YOUR_STRIPE_SECRET_KEY # Replace with your actual Stripe Test Key
    depends_on:
      - mongo
      - kafka
    networks:
      - rideverse-net
    volumes:
      - ./payment-service:/usr/src/app
      - /usr/src/app/node_modules


networks:
  rideverse-net:
    driver: bridge

volumes:
  mongo-data: # Define the named volume for MongoDB persistence
  # Kafka/Zookeeper volumes can be added if persistence is needed for them too
